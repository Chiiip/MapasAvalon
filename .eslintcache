[{"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\index.js":"1","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\App.js":"2","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\reportWebVitals.js":"3","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\components\\Main\\Main.jsx":"4","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\components\\MapsTable\\MapsTable.jsx":"5","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\services\\avalonMapService.js":"6","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\utils\\utils.js":"7"},{"size":517,"mtime":1624218484379,"results":"8","hashOfConfig":"9"},{"size":213,"mtime":1624218726244,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1624218484379,"results":"11","hashOfConfig":"9"},{"size":756,"mtime":1624220281585,"results":"12","hashOfConfig":"9"},{"size":4878,"mtime":1624223183531,"results":"13","hashOfConfig":"9"},{"size":527,"mtime":1624222374371,"results":"14","hashOfConfig":"9"},{"size":2466,"mtime":1624223003074,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"egp2v9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\index.js",[],["32","33"],"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\App.js",[],"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\reportWebVitals.js",[],"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\components\\Main\\Main.jsx",["34"],"import React, { useState, useEffect } from \"react\";\r\nimport MapsTable from \"../MapsTable/MapsTable\";\r\nimport avalonMapService from \"../../services/avalonMapService\";\r\n\r\nconst Main = () => {\r\n  const [firebaseData, setFirebaseData] = useState([]);\r\n  const [filter, setFilter] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    avalonMapService.listAllMaps(setFirebaseData);\r\n  }, []);\r\n\r\n  const handleTextChange = event => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div><input type=\"text\" value={text} onChange={handleTextChange}></input></div>\r\n      <div>\r\n        <MapsTable list={firebaseData} filter={filter} text={text} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\components\\MapsTable\\MapsTable.jsx",[],"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\services\\avalonMapService.js",[],"C:\\Users\\pedro\\Documents\\Programming\\Mapas Avalon\\AvalonRoads\\src\\utils\\utils.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":18,"nodeType":"41","messageId":"42","endLine":7,"endColumn":27},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'setFilter' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]